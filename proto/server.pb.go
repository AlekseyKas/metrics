// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alloc         float64 `protobuf:"fixed64,1,opt,name=Alloc,proto3" json:"Alloc,omitempty"`
	BuckHashSys   float64 `protobuf:"fixed64,2,opt,name=BuckHashSys,proto3" json:"BuckHashSys,omitempty"`
	Frees         float64 `protobuf:"fixed64,3,opt,name=Frees,proto3" json:"Frees,omitempty"`
	GCCPUFraction float64 `protobuf:"fixed64,4,opt,name=GCCPUFraction,proto3" json:"GCCPUFraction,omitempty"`
	GCSys         float64 `protobuf:"fixed64,5,opt,name=GCSys,proto3" json:"GCSys,omitempty"`
	HeapAlloc     float64 `protobuf:"fixed64,6,opt,name=HeapAlloc,proto3" json:"HeapAlloc,omitempty"`
	HeapIdle      float64 `protobuf:"fixed64,7,opt,name=HeapIdle,proto3" json:"HeapIdle,omitempty"`
	HeapInuse     float64 `protobuf:"fixed64,8,opt,name=HeapInuse,proto3" json:"HeapInuse,omitempty"`
	HeapObjects   float64 `protobuf:"fixed64,9,opt,name=HeapObjects,proto3" json:"HeapObjects,omitempty"`
	HeapReleased  float64 `protobuf:"fixed64,10,opt,name=HeapReleased,proto3" json:"HeapReleased,omitempty"`
	HeapSys       float64 `protobuf:"fixed64,11,opt,name=HeapSys,proto3" json:"HeapSys,omitempty"`
	LastGC        float64 `protobuf:"fixed64,12,opt,name=LastGC,proto3" json:"LastGC,omitempty"`
	Lookups       float64 `protobuf:"fixed64,13,opt,name=Lookups,proto3" json:"Lookups,omitempty"`
	MCacheInuse   float64 `protobuf:"fixed64,14,opt,name=MCacheInuse,proto3" json:"MCacheInuse,omitempty"`
	MCacheSys     float64 `protobuf:"fixed64,15,opt,name=MCacheSys,proto3" json:"MCacheSys,omitempty"`
	MSpanInuse    float64 `protobuf:"fixed64,16,opt,name=MSpanInuse,proto3" json:"MSpanInuse,omitempty"`
	MSpanSys      float64 `protobuf:"fixed64,17,opt,name=MSpanSys,proto3" json:"MSpanSys,omitempty"`
	Mallocs       float64 `protobuf:"fixed64,18,opt,name=Mallocs,proto3" json:"Mallocs,omitempty"`
	NextGC        float64 `protobuf:"fixed64,19,opt,name=NextGC,proto3" json:"NextGC,omitempty"`
	NumForcedGC   float64 `protobuf:"fixed64,20,opt,name=NumForcedGC,proto3" json:"NumForcedGC,omitempty"`
	NumGC         float64 `protobuf:"fixed64,21,opt,name=NumGC,proto3" json:"NumGC,omitempty"`
	OtherSys      float64 `protobuf:"fixed64,22,opt,name=OtherSys,proto3" json:"OtherSys,omitempty"`
	PauseTotalNs  float64 `protobuf:"fixed64,23,opt,name=PauseTotalNs,proto3" json:"PauseTotalNs,omitempty"`
	StackInuse    float64 `protobuf:"fixed64,24,opt,name=StackInuse,proto3" json:"StackInuse,omitempty"`
	StackSys      float64 `protobuf:"fixed64,25,opt,name=StackSys,proto3" json:"StackSys,omitempty"`
	Sys           float64 `protobuf:"fixed64,26,opt,name=Sys,proto3" json:"Sys,omitempty"`
	TotalAlloc    float64 `protobuf:"fixed64,27,opt,name=TotalAlloc,proto3" json:"TotalAlloc,omitempty"`
	PollCount     int64   `protobuf:"varint,28,opt,name=PollCount,proto3" json:"PollCount,omitempty"`
	RandomValue   float64 `protobuf:"fixed64,29,opt,name=RandomValue,proto3" json:"RandomValue,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *Metrics) GetAlloc() float64 {
	if x != nil {
		return x.Alloc
	}
	return 0
}

func (x *Metrics) GetBuckHashSys() float64 {
	if x != nil {
		return x.BuckHashSys
	}
	return 0
}

func (x *Metrics) GetFrees() float64 {
	if x != nil {
		return x.Frees
	}
	return 0
}

func (x *Metrics) GetGCCPUFraction() float64 {
	if x != nil {
		return x.GCCPUFraction
	}
	return 0
}

func (x *Metrics) GetGCSys() float64 {
	if x != nil {
		return x.GCSys
	}
	return 0
}

func (x *Metrics) GetHeapAlloc() float64 {
	if x != nil {
		return x.HeapAlloc
	}
	return 0
}

func (x *Metrics) GetHeapIdle() float64 {
	if x != nil {
		return x.HeapIdle
	}
	return 0
}

func (x *Metrics) GetHeapInuse() float64 {
	if x != nil {
		return x.HeapInuse
	}
	return 0
}

func (x *Metrics) GetHeapObjects() float64 {
	if x != nil {
		return x.HeapObjects
	}
	return 0
}

func (x *Metrics) GetHeapReleased() float64 {
	if x != nil {
		return x.HeapReleased
	}
	return 0
}

func (x *Metrics) GetHeapSys() float64 {
	if x != nil {
		return x.HeapSys
	}
	return 0
}

func (x *Metrics) GetLastGC() float64 {
	if x != nil {
		return x.LastGC
	}
	return 0
}

func (x *Metrics) GetLookups() float64 {
	if x != nil {
		return x.Lookups
	}
	return 0
}

func (x *Metrics) GetMCacheInuse() float64 {
	if x != nil {
		return x.MCacheInuse
	}
	return 0
}

func (x *Metrics) GetMCacheSys() float64 {
	if x != nil {
		return x.MCacheSys
	}
	return 0
}

func (x *Metrics) GetMSpanInuse() float64 {
	if x != nil {
		return x.MSpanInuse
	}
	return 0
}

func (x *Metrics) GetMSpanSys() float64 {
	if x != nil {
		return x.MSpanSys
	}
	return 0
}

func (x *Metrics) GetMallocs() float64 {
	if x != nil {
		return x.Mallocs
	}
	return 0
}

func (x *Metrics) GetNextGC() float64 {
	if x != nil {
		return x.NextGC
	}
	return 0
}

func (x *Metrics) GetNumForcedGC() float64 {
	if x != nil {
		return x.NumForcedGC
	}
	return 0
}

func (x *Metrics) GetNumGC() float64 {
	if x != nil {
		return x.NumGC
	}
	return 0
}

func (x *Metrics) GetOtherSys() float64 {
	if x != nil {
		return x.OtherSys
	}
	return 0
}

func (x *Metrics) GetPauseTotalNs() float64 {
	if x != nil {
		return x.PauseTotalNs
	}
	return 0
}

func (x *Metrics) GetStackInuse() float64 {
	if x != nil {
		return x.StackInuse
	}
	return 0
}

func (x *Metrics) GetStackSys() float64 {
	if x != nil {
		return x.StackSys
	}
	return 0
}

func (x *Metrics) GetSys() float64 {
	if x != nil {
		return x.Sys
	}
	return 0
}

func (x *Metrics) GetTotalAlloc() float64 {
	if x != nil {
		return x.TotalAlloc
	}
	return 0
}

func (x *Metrics) GetPollCount() int64 {
	if x != nil {
		return x.PollCount
	}
	return 0
}

func (x *Metrics) GetRandomValue() float64 {
	if x != nil {
		return x.RandomValue
	}
	return 0
}

type JSONMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delta int64   `protobuf:"varint,1,opt,name=Delta,proto3" json:"Delta,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=Value,proto3" json:"Value,omitempty"`
	ID    string  `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	MType string  `protobuf:"bytes,4,opt,name=MType,proto3" json:"MType,omitempty"`
	Hash  string  `protobuf:"bytes,5,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *JSONMetrics) Reset() {
	*x = JSONMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSONMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSONMetrics) ProtoMessage() {}

func (x *JSONMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSONMetrics.ProtoReflect.Descriptor instead.
func (*JSONMetrics) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *JSONMetrics) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *JSONMetrics) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *JSONMetrics) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *JSONMetrics) GetMType() string {
	if x != nil {
		return x.MType
	}
	return ""
}

func (x *JSONMetrics) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type SendMetricsJSONRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JSONMetrics []*JSONMetrics `protobuf:"bytes,1,rep,name=JSONMetrics,proto3" json:"JSONMetrics,omitempty"`
}

func (x *SendMetricsJSONRequest) Reset() {
	*x = SendMetricsJSONRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMetricsJSONRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMetricsJSONRequest) ProtoMessage() {}

func (x *SendMetricsJSONRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMetricsJSONRequest.ProtoReflect.Descriptor instead.
func (*SendMetricsJSONRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *SendMetricsJSONRequest) GetJSONMetrics() []*JSONMetrics {
	if x != nil {
		return x.JSONMetrics
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

type GetMetricsJSONResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JSONMetrics []*JSONMetrics `protobuf:"bytes,1,rep,name=JSONMetrics,proto3" json:"JSONMetrics,omitempty"`
}

func (x *GetMetricsJSONResponse) Reset() {
	*x = GetMetricsJSONResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsJSONResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsJSONResponse) ProtoMessage() {}

func (x *GetMetricsJSONResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsJSONResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsJSONResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetricsJSONResponse) GetJSONMetrics() []*JSONMetrics {
	if x != nil {
		return x.JSONMetrics
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType string `protobuf:"bytes,1,opt,name=MType,proto3" json:"MType,omitempty"`
	ID    string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *Metric) GetMType() string {
	if x != nil {
		return x.MType
	}
	return ""
}

func (x *Metric) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type MetricData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delta int64   `protobuf:"varint,1,opt,name=Delta,proto3" json:"Delta,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Mtype string  `protobuf:"bytes,3,opt,name=Mtype,proto3" json:"Mtype,omitempty"`
	ID    string  `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	Data  string  `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *MetricData) Reset() {
	*x = MetricData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricData) ProtoMessage() {}

func (x *MetricData) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricData.ProtoReflect.Descriptor instead.
func (*MetricData) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *MetricData) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *MetricData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricData) GetMtype() string {
	if x != nil {
		return x.Mtype
	}
	return ""
}

func (x *MetricData) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MetricData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x06, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x75, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x53, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x42, 0x75,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x53, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x72, 0x65,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x46, 0x72, 0x65, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x47, 0x43, 0x43, 0x50, 0x55, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x47, 0x43, 0x43, 0x50, 0x55, 0x46, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x43, 0x53, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x47, 0x43, 0x53, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x48,
	0x65, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x48, 0x65, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x65, 0x61,
	0x70, 0x49, 0x64, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x48, 0x65, 0x61,
	0x70, 0x49, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x70, 0x49, 0x6e, 0x75,
	0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x48, 0x65, 0x61, 0x70, 0x49, 0x6e,
	0x75, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x48, 0x65, 0x61, 0x70, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x70, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x48, 0x65, 0x61,
	0x70, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61,
	0x70, 0x53, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x48, 0x65, 0x61, 0x70,
	0x53, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x47, 0x43, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x47, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49,
	0x6e, 0x75, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x4d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x49, 0x6e, 0x75, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x6e,
	0x75, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x4d, 0x53, 0x70, 0x61, 0x6e,
	0x49, 0x6e, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x53, 0x70, 0x61, 0x6e, 0x53, 0x79,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4d, 0x53, 0x70, 0x61, 0x6e, 0x53, 0x79,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x4d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e,
	0x65, 0x78, 0x74, 0x47, 0x43, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x4e, 0x65, 0x78,
	0x74, 0x47, 0x43, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64,
	0x47, 0x43, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x4e, 0x75, 0x6d, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x64, 0x47, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x75, 0x6d, 0x47, 0x43, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x4e, 0x75, 0x6d, 0x47, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x79, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x75, 0x73, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x73, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x53, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x6c,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x6f,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x73, 0x0a, 0x0b, 0x4a, 0x53, 0x4f,
	0x4e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4e,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f,
	0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x4a, 0x53, 0x4f, 0x4e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x0b, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a,
	0x53, 0x4f, 0x4e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0b, 0x4a, 0x53, 0x4f, 0x4e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x2e, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x72, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x32, 0xf5, 0x01, 0x0a, 0x08,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4d, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f,
	0x4e, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_server_proto_goTypes = []interface{}{
	(*Metrics)(nil),                // 0: proto.Metrics
	(*JSONMetrics)(nil),            // 1: proto.JSONMetrics
	(*SendMetricsJSONRequest)(nil), // 2: proto.SendMetricsJSONRequest
	(*Empty)(nil),                  // 3: proto.Empty
	(*GetMetricsJSONResponse)(nil), // 4: proto.GetMetricsJSONResponse
	(*Metric)(nil),                 // 5: proto.Metric
	(*MetricData)(nil),             // 6: proto.MetricData
}
var file_server_proto_depIdxs = []int32{
	1, // 0: proto.SendMetricsJSONRequest.JSONMetrics:type_name -> proto.JSONMetrics
	1, // 1: proto.GetMetricsJSONResponse.JSONMetrics:type_name -> proto.JSONMetrics
	3, // 2: proto.MetricsM.GetMetricsJSON:input_type -> proto.Empty
	5, // 3: proto.MetricsM.GetMetricData:input_type -> proto.Metric
	2, // 4: proto.MetricsM.SendMetricsJSON:input_type -> proto.SendMetricsJSONRequest
	6, // 5: proto.MetricsM.UpdateMetric:input_type -> proto.MetricData
	4, // 6: proto.MetricsM.GetMetricsJSON:output_type -> proto.GetMetricsJSONResponse
	6, // 7: proto.MetricsM.GetMetricData:output_type -> proto.MetricData
	3, // 8: proto.MetricsM.SendMetricsJSON:output_type -> proto.Empty
	3, // 9: proto.MetricsM.UpdateMetric:output_type -> proto.Empty
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSONMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMetricsJSONRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsJSONResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
